version: '3.9'

services:
  django: &django
    build:
      context: .
      dockerfile: ./Dockerfile
    image: cqs
    container_name: cqs_service
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=DRF_1.settings.dev
      - WAIT_HOSTS=db:5432
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - ./keys/:/app/keys
      - ./fixtures/:/app/fixtures
      - ./media/:/app/media
      - ./staticfiles/:/app/staticfiles
    command: /start-server

  db:
    image: postgres:14.6-alpine
    environment:
      POSTGRES_PASSWORD: "postgres"
    healthcheck:
      test: [ "CMD=SHELL", "pg_isready - U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7.0.2-alpine
    container_name: cqs_redis
    command: docker run --name some-redis -d redis redis-server --save 60 1 --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - "./data/cache:/data"

  celeryworker:
    <<: *django
    image: cqs_celeryworker
    container_name: cqs_celeryworker
    ports: [ ]
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: cqs_celerybeat
    container_name: cqs_celerybeat
    ports: [ ]
    command: /start-celerybeat

volumes:
  db:
    driver: local
